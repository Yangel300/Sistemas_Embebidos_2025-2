/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */
module DIG_D_FF_1bit
#(
    parameter Default = 0
)
(
   input D,
   input C,
   output Q,
   output \~Q
);
    reg state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        state <= D;
    end

    initial begin
        state = Default;
    end
endmodule


module \SEMAFOROVerilog1.1  (
  input C,
  input Em,
  output RED,
  output YELLOW,
  output GREEN,
  output WHITE
);
  wire GREEN_temp;
  wire Q_2;
  wire s0;
  wire YELLOW_temp;
  wire s1;
  wire s2;
  wire s3;
  assign WHITE = (C & Em);
  // D1
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i0 (
    .D( GREEN_temp ),
    .C( C ),
    .Q( Q_2 )
  );
  // D2
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i1 (
    .D( s0 ),
    .C( C ),
    .Q( GREEN_temp )
  );
  assign s0 = (YELLOW_temp & s1);
  // D3
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i2 (
    .D( s2 ),
    .C( C ),
    .Q( YELLOW_temp )
  );
  assign s1 = ~ Q_2;
  assign s3 = ~ YELLOW_temp;
  assign s2 = (s3 & s1);
  assign RED = (s3 & ~ GREEN_temp);
  assign YELLOW = YELLOW_temp;
  assign GREEN = GREEN_temp;
endmodule
