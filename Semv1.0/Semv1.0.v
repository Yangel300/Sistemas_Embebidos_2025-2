/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */
module DIG_D_FF_1bit
#(
    parameter Default = 0
)
(
   input D,
   input C,
   output Q,
   output \~Q
);
    reg state;

    assign Q = state;
    assign \~Q = ~state;

    always @ (posedge C) begin
        state <= D;
    end

    initial begin
        state = Default;
    end
endmodule


module \Semv1.0  (
  input C,
  output [2:0] cled
);
  wire Q_1;
  wire Q_2;
  wire s0;
  wire Q_0;
  wire s1;
  wire s2;
  // D1
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i0 (
    .D( Q_1 ),
    .C( C ),
    .Q( Q_2 )
  );
  // D2
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i1 (
    .D( s0 ),
    .C( C ),
    .Q( Q_1 )
  );
  assign s0 = (Q_0 & s1);
  // D3
  DIG_D_FF_1bit #(
    .Default(0)
  )
  DIG_D_FF_1bit_i2 (
    .D( s2 ),
    .C( C ),
    .Q( Q_0 )
  );
  assign s1 = ~ Q_2;
  assign cled[0] = Q_0;
  assign cled[1] = Q_1;
  assign cled[2] = Q_2;
  assign s2 = (~ Q_0 & s1);
endmodule
